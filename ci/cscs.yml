include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext.yml'

stages:
  - build
  - test
  - benchmark

.py310: &py310
  PYVERSION_PREFIX: py310
  PYVERSION: 3.10.9

variables:
  DACE_VERSION: "0.15.1"
  PERSIST_IMAGE_NAME: $CSCS_REGISTRY_PATH/icon4py:$CI_COMMIT_SHORT_SHA
  PYTHON_VERSION: "3.10"

.build_template:
  stage: build
  extends: .container-builder
  variables:
    DOCKERFILE: ci/docker/Dockerfile.build
    DOCKER_BUILD_ARGS: '["PYVERSION=$PYVERSION"]'
    <<: *py310

.test_template:
  extends: .container-runner-daint-gpu
  timeout: 8h
  image: $PERSIST_IMAGE_NAME
  before_script:
    - apt-get update
    - python3 -m pip install --upgrade pip setuptools wheel
    - cd /icon4py
    - pyversion_no_dot="${PYTHON_VERSION//./}"
    - pip install tox clang-format
    - python -c "import cupy"
    - ls ${TEST_DATA_PATH}
  variables:
    SLURM_JOB_NUM_NODES: 1
    SLURM_NTASKS: 1
    SLURM_TIMELIMIT: '06:00:00'
    CRAY_CUDA_MPS: 1
    NUM_PROCESSES: auto
    VIRTUALENV_SYSTEM_SITE_PACKAGES: 1
    CSCS_NEEDED_DATA: icon4py
    TEST_DATA_PATH: "/apps/daint/UES/jenkssl/ciext/icon4py"

build_job:
  extends: .build_template

test_model_job_variants:
    extends: .test_template
    stage: test
    script:
      - if [ "$BACKEND" = "dace_cpu" ] || [ "$BACKEND" = "dace_gpu" ]; then pip install dace==$DACE_VERSION; fi
      - tox -r -e run_stencil_tests -c model/ --verbose -- --backend=$BACKEND
    parallel:
      matrix:
        - BACKEND: [dace_cpu, dace_gpu, gtfn_cpu, gtfn_gpu, roundtrip]

test_tools_job:
  extends: .test_template
  stage: test
  script:
    - tox -r -c tools/ --verbose

benchmark_model_variants:
  extends: .test_template
  stage: benchmark
  script:
    - if [ "$BACKEND" = "dace_cpu" ] || [ "$BACKEND" = "dace_gpu" ]; then pip install dace==$DACE_VERSION; fi
    - tox -r -e run_benchmarks -c model/ -- --backend=$BACKEND --grid=icon_grid
  parallel:
    matrix:
      - BACKEND: [dace_cpu, dace_gpu, gtfn_cpu, gtfn_gpu]
