include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext.yml'

stages:
  - baseimage
  - image
  - test
  - benchmark

variables:
  PYVERSION_PREFIX: py310
  PYVERSION: 3.10.9

# Base image build step with SHA256 checksum for caching
.build_baseimage:
  stage: baseimage
  before_script:
    - DATA_TAG=`mktemp`
    - cat $DOCKERFILE > $DATA_TAG
    - echo $DOCKER_BUILD_ARGS >> $DATA_TAG
    - DOCKER_TAG=`sha256sum $DATA_TAG | head -c 16`
    - rm -f $DATA_TAG
    - export PERSIST_IMAGE_NAME=$CSCS_REGISTRY_PATH/public/$ARCH/base/icon4py:$DOCKER_TAG-$PYVERSION
    - echo "BASE_IMAGE_${PYVERSION_PREFIX}=$PERSIST_IMAGE_NAME" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  variables:
    DOCKERFILE: ci/docker/base.Dockerfile
    # change to 'always' if you want to rebuild, even if target tag exists already (if-not-exists is the default, i.e. we could also skip the variable)
    CSCS_REBUILD_POLICY: if-not-exists
    DOCKER_BUILD_ARGS: '["HPC_SDK_VERSION=$HPC_SDK_VERSION", "HPC_SDK_NAME=$HPC_SDK_NAME", "NVHPC_DEFAULT_CUDA=$NVHPC_DEFAULT_CUDA", "CUPY_PACKAGE=$CUPY_PACKAGE", "PYVERSION=$PYVERSION", "CI_PROJECT_DIR=$CI_PROJECT_DIR"]'
build_baseimage_x86_64:
  extends: [.container-builder-cscs-zen2, .build_baseimage]
  variables:
    HPC_SDK_VERSION: 22.11
    HPC_SDK_NAME: nvhpc_2022_2211_Linux_x86_64_cuda_11.8
    NVHPC_DEFAULT_CUDA: 11.8
    CUPY_PACKAGE: cupy-cuda11x
build_baseimage_aarch64:
  extends: [.container-builder-cscs-gh200, .build_baseimage]
  variables:
    HPC_SDK_VERSION: 24.5
    HPC_SDK_NAME: nvhpc_2024_245_Linux_aarch64_cuda_12.4
    NVHPC_DEFAULT_CUDA: 12.4
    CUPY_PACKAGE: cupy-cuda12x

.build_image:
  stage: image
  variables:
      # Unique image name based on commit SHA
      PERSIST_IMAGE_NAME: $CSCS_REGISTRY_PATH/$ARCH/icon4py/icon4py-ci:$CI_COMMIT_SHA-$PYVERSION
      DOCKERFILE: ci/docker/checkout.Dockerfile
      DOCKER_BUILD_ARGS: '["PYVERSION=$PYVERSION", "BASE_IMAGE=${BASE_IMAGE_${PYVERSION_PREFIX}}"]'
build_image_x86_64:
  extends: [.container-builder-cscs-zen2, .build_image]
  needs: [build_baseimage_x86_64]
build_image_aarch64:
  extends: [.container-builder-cscs-gh200, .build_image]
  needs: [build_baseimage_aarch64]

.test_template:
  timeout: 8h
  image: $CSCS_REGISTRY_PATH/$ARCH/icon4py/icon4py-ci:$CI_COMMIT_SHA-$PYVERSION
  before_script:
    - python -c "import cupy"
    - cd /icon4py
    - ls "${TEST_DATA_PATH}"
  variables:
    SLURM_JOB_NUM_NODES: 1
    SLURM_NTASKS: 1
    SLURM_TIMELIMIT: '06:00:00'
    CRAY_CUDA_MPS: 1
    NUM_PROCESSES: auto
    VIRTUALENV_SYSTEM_SITE_PACKAGES: 1
    CSCS_NEEDED_DATA: icon4py
    TEST_DATA_PATH: "/project/d121/icon4py/ci/testdata"
    ICON_GRID_LOC: "${TEST_DATA_PATH}/grids/mch_ch_r04b09_dsl"
    PY2F_GPU_TESTS: 1
    CUDACXX: "${HPC_SDK_PATH}/compilers/bin/nvcc"
    NVFORTRAN_COMPILER: "${HPC_SDK_PATH}/compilers/bin/nvfortran"
.test_template_x86_64:
  extends: [.container-runner-daint-gpu, .test_template]
  needs: [build_image_x86_64]
  variables:
    HPC_SDK_PATH: "/opt/nvidia/hpc_sdk/Linux_x86_64/22.11"
.test_template_aarch64:
  extends: [.container-runner-todi-gh200, .test_template]
  needs: [build_image_aarch64]
  variables:
    HPC_SDK_PATH: "/opt/nvidia/hpc_sdk/Linux_x86_64/24.5"
    # Grace-Hopper gpu architecture is not enabled by default in CUDA build
    CUDAARCHS: "90"