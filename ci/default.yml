include:
  - local: 'ci/base.yml'

.test_model_stencils:
  stage: test
  script:
    - nox -s "test_model-3.10(stencils, $COMPONENT)" -- --backend=$BACKEND --grid=$GRID
  rules:
    - if: $COMPONENT == 'dycore' || $COMPONENT == 'diffusion'
      variables:
        SLURM_TIMELIMIT: '00:20:00'
    - when: on_success
      variables:
        SLURM_TIMELIMIT: '00:10:00'
  parallel:
    matrix:
      - COMPONENT: [diffusion, dycore, microphysics, common, driver]
        BACKEND: [gtfn_gpu]
        GRID: [simple, icon_regional]
# test_model_stencils_x86_64:
#   extends: [.test_model_stencils, .test_template_x86_64]
test_model_stencils_aarch64:
  extends: [.test_model_stencils, .test_template_aarch64]


.test_tools_datatests:
  stage: test
  script:
    - nox -s 'test_tools-3.10(datatest)'
# test_tools_x86_64:
#   extends: [.test_tools_datatests, .test_template_x86_64]
test_tools_datatests_aarch64:
  extends: [.test_tools_datatests, .test_template_aarch64]

.test_model_datatests:
  stage: test
  script:
    - nox -s "test_model-3.10(datatest, $COMPONENT)" -- --backend=$BACKEND --level=$LEVEL
  rules:
    - if: $BACKEND == 'dace_gpu' && $COMPONENT != 'diffusion' && $COMPONENT != 'dycore'
      when: never  # run only in daily CI, to save compute resources
    - if: $COMPONENT == 'common' && $LEVEL == 'integration' && $BACKEND == 'gtfn_gpu'
      variables:
        NUM_PROCESSES: 2
        SLURM_TIMELIMIT: '00:30:00'
    - if: $COMPONENT == 'dycore' && $BACKEND == 'dace_gpu'
      variables:
        SLURM_TIMELIMIT: '01:00:00'
    - if: $BACKEND == 'embedded'
      variables:
        SLURM_TIMELIMIT: '00:15:00'
    - when: on_success
      variables:
        SLURM_TIMELIMIT: '00:30:00'
  parallel:
    matrix:
      - COMPONENT: [advection, diffusion, dycore, microphysics, common, driver]
        BACKEND: [embedded, dace_gpu, gtfn_cpu, gtfn_gpu]
        LEVEL: [integration]
# test_model_datatests_x86_64:
#   extends: [.test_model_datatests, .test_template_x86_64]
test_model_datatests_aarch64:
  extends: [.test_model_datatests, .test_template_aarch64]
