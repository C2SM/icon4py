# -- Build system requirements (PEP 518) --
[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools>=61.0', 'wheel>=0.40.0']

# -- Standard project description options (PEP 621) --
[project]
authors = [{email = 'gridtools@cscs.ch', name = 'ETH Zurich'}]
classifiers = [
  'Development Status :: 3 - Alpha',
  'Intended Audience :: Science/Research',
  'License :: OSI Approved :: BSD License',
  'Operating System :: POSIX',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: Implementation :: CPython',
  'Topic :: Scientific/Engineering :: Atmospheric Science',
  'Topic :: Scientific/Engineering :: Mathematics',
  'Topic :: Scientific/Engineering :: Physics'
]
dependencies = [
  # workspace members
  'icon4py-atmosphere-advection>=0.0.6',
  'icon4py-atmosphere-diffusion>=0.0.6',
  'icon4py-atmosphere-dycore>=0.0.6',
  'icon4py-common>=0.0.6',
  # external dependencies
  'cffi>=1.5',
  'fprettify>=0.3.7',
  'gt4py>=1.0.4',
  "numpy>=1.23.3",
  'packaging>=20.0',
]
description = 'Tools and utilities for integrating icon4py code into the ICON model.'
license = {text = "BSD-3 License"}
name = 'icon4py-tools'
readme = 'README.md'
requires-python = '>=3.10'
# managed by bump-my-version:
version = "0.0.6"

[project.optional-dependencies]
cuda11 = ['cupy-cuda11x>=13.0', 'gt4py[cuda11]']
cuda12 = ['cupy-cuda12x>=13.0', 'gt4py[cuda12]']

[project.scripts]
f2ser = 'icon4py.tools.f2ser.cli:main'
icon4pygen = 'icon4py.tools.icon4pygen.cli:main'
icon_liskov = 'icon4py.tools.liskov.cli:main'
py2fgen = 'icon4py.tools.py2fgen.cli:main'

[project.urls]
Homepage = 'https://github.com/C2SM/icon4py'

# -- bumpversion --
[tool.bumpversion]
allow_dirty = false
commit = false
current_version = "0.0.6"
ignore_missing_version = false
message = 'Bump icon4py-tools version: {current_version} â†’ {new_version}'
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)?"
serialize = ["{major}.{minor}.{patch}"]
tag = false

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = '''
# managed by bump-my-version:
version = "{current_version}"
'''
replace = '''
# managed by bump-my-version:
version = "{new_version}"
'''

[[tool.bumpversion.files]]
filename = "src/icon4py/tools/__init__.py"

# # -- coverage --
# [tool.coverage]

# [tool.coverage.html]
# directory = 'tests/_reports/coverage_html'

# [tool.coverage.paths]
# source = ['src/icon4py/tools/']

# [tool.coverage.report]
# exclude_lines = [
#   'raise AssertionError',  # Don't complain if tests don't hit defensive assertion code
#   'raise NotImplementedError',  # Don't complain if tests don't hit defensive assertion code
#   'if 0:',  # Don't complain if non-runnable code isn't run
#   'if __name__ == .__main__.:'  # Don't complain if non-runnable code isn't run
# ]
# ignore_errors = true

# [tool.coverage.run]
# branch = true
# parallel = true
# source_pkgs = ['icon4py-tools']

# -- ruff --
[tool.ruff]
extend = "../pyproject.toml"

[tool.ruff.lint.isort]
known-first-party = ['icon4py']
known-third-party = ['gt4py']

# -- setuptools --
[tool.setuptools.package-data]
'*' = ['*.in', '*.md', '*.rst', '*.txt', 'LICENSE', 'py.typed']

[tool.setuptools.packages]
find = {namespaces = true, where = ['src']}
