[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools>=61.0', 'wheel>=0.40.0']

[project]
authors = [{email = 'gridtools@cscs.ch'}, {name = 'ETH Zurich'}]
classifiers = [
  'Development Status :: 3 - Alpha',
  'Intended Audience :: Science/Research',
  'License :: OSI Approved :: BSD License',
  'Operating System :: POSIX',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: Implementation :: CPython',
  'Topic :: Scientific/Engineering :: Atmospheric Science',
  'Topic :: Scientific/Engineering :: Mathematics',
  'Topic :: Scientific/Engineering :: Physics'
]
dependencies = [
  # workspace members
  'icon4py-atmosphere-advection>=0.0.6',
  'icon4py-atmosphere-diffusion>=0.0.6',
  'icon4py-atmosphere-dycore>=0.0.6',
  'icon4py-common[netcdf]>=0.0.6',
  # external dependencies
  'cffi>=1.5',
  'fprettify>=0.3.7',
  'gt4py>=1.0.4',
  'tabulate>=0.8.9'
]
description = 'Tools and utilities for integrating icon4py code into the ICON model.'
dynamic = ['version']
license = {text = "BSD-3 License"}
name = 'icon4pytools'
readme = 'README.md'
requires-python = '>=3.10'

[project.optional-dependencies]
cupy11 = ['cupy-cuda11x>=13.0']
cupy12 = ['cupy-cuda12x>=13.0']

[project.scripts]
f2ser = 'icon4pytools.f2ser.cli:main'
icon4pygen = 'icon4pytools.icon4pygen.cli:main'
icon_liskov = 'icon4pytools.liskov.cli:main'
py2fgen = 'icon4pytools.py2fgen.cli:main'

[project.urls]
repository = 'https://github.com/C2SM/icon4py'

# -- bump-my-version --
[tool.bumpversion]
allow_dirty = false
commit = false
current_version = "0.0.7"
ignore_missing_version = false
message = 'Bump icon4pytools version: {current_version} â†’ {new_version}'
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)?"
serialize = ["{major}.{minor}.{patch}"]
tag = false

[[tool.bumpversion.files]]
filename = "src/icon4pytools/__init__.py"

# -- coverage --
[tool.coverage]

[tool.coverage.html]
directory = 'tests/_reports/coverage_html'

[tool.coverage.paths]
source = ['src/icon4pytools/']

[tool.coverage.report]
exclude_lines = [
  'raise AssertionError',  # Don't complain if tests don't hit defensive assertion code
  'raise NotImplementedError',  # Don't complain if tests don't hit defensive assertion code
  'if 0:',  # Don't complain if non-runnable code isn't run
  'if __name__ == .__main__.:'  # Don't complain if non-runnable code isn't run
]
ignore_errors = true

[tool.coverage.run]
branch = true
parallel = true
source_pkgs = ['icon4pytools']

# -- pytest --
[tool.pytest]

# --ruff --
[tool.ruff]
extend = "../pyproject.toml"

[tool.ruff.lint.isort]
known-first-party = ['icon4pytools']
known-third-party = ['gt4py', 'icon4py']

# -- setuptools --
[tool.setuptools]

[tool.setuptools.dynamic]
version = {attr = 'icon4pytools.__init__.__version__'}

[tool.setuptools.package-data]
'icon4pytools' = ['py.typed']

# -- uv --
[tool.uv]
conflicts = [
  [
    {extra = "cupy11"},
    {extra = "cupy12"}
  ]
]
