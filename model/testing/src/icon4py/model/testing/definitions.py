# ICON4Py - ICON inspired code in Python and GT4Py
#
# Copyright (c) 2022-2024, ETH Zurich and MeteoSwiss
# All rights reserved.
#
# Please, refer to the LICENSE file in the root directory.
# SPDX-License-Identifier: BSD-3-Clause

import dataclasses
import enum
import os
import pathlib
from collections.abc import Mapping
from typing import Final, Literal, NamedTuple, TypedDict

from typing_extensions import ReadOnly


_TEST_UTILS_PATH: Final = pathlib.Path(__file__) / ".."
_MODEL_PATH: Final = _TEST_UTILS_PATH / ".."
_COMMON_PATH: Final = _MODEL_PATH / ".." / ".." / ".." / ".."

DEFAULT_TEST_DATA_FOLDER: Final = "testdata"
TEST_DATA_PATH: Final[pathlib.Path] = pathlib.Path(
    os.getenv("TEST_DATA_PATH") or (_COMMON_PATH / ".." / DEFAULT_TEST_DATA_FOLDER)
)
GRIDS_PATH: Final[pathlib.Path] = TEST_DATA_PATH / "grids"
SERIALIZED_DATA_PATH: Final[pathlib.Path] = TEST_DATA_PATH / "ser_icondata"


class GridKind(str, enum.Enum):
    REGIONAL = "REGIONAL"
    GLOBAL = "GLOBAL"
    TORUS = "TORUS"

    def __repr__(self):
        return str.__repr__(self)

    def __str__(self):
        return str.__str__(self)


class GridSizesDict(TypedDict):
    cell: ReadOnly[int]
    edge: ReadOnly[int]
    vertex: ReadOnly[int]


class GridDefinition(NamedTuple):
    description: str
    kind: GridKind
    sizes: GridSizesDict
    file_name: str | None = None
    uri: str | None = None


class Grid(GridDefinition, enum.Enum):
    SIMPLE = (
        "Torus grid, fully defined in code (simple.py) used for testing ",  # description
        GridKind.TORUS,  # kind
        GridSizesDict(cell=18, vertex=9, edge=27),  # sizes
        None,  # file_name
        None,  # uri
    )

    R02B04_GLOBAL = (
        "R02B04, small global grid, default grid used in ICON testing, origin of this file is unclear (source = icon-dev)",  # description
        GridKind.GLOBAL,  # kind
        GridSizesDict(cell=20480, vertex=10242, edge=30720),  # sizes
        "icon_grid_0013_R02B04_R.nc",  # file_name
        "https://polybox.ethz.ch/index.php/s/BRiF7XrCCpGqpEF/download",  # uri
    )

    R02B07_GLOBAL = (
        "R02b07, large global grid, generated by MPI-M GridGenerator",  # description
        GridKind.GLOBAL,  # kind
        GridSizesDict(cell=1310720, vertex=655362, edge=1966080),  # sizes
        "icon_grid_0023_R02B07_G.nc",  # file_name
        "https://polybox.ethz.ch/index.php/s/RMqNbaeHLD5tDd6/download",  # uri
    )

    R19_B07_MCH_LOCAL = (
        "Grid used in the full icon-ch2 (2km resolution) operational setup of MeteoSwiss, generated by icontools (DWD)",  # description
        GridKind.REGIONAL,  # kind
        GridSizesDict(cell=283876, vertex=142724, edge=426599),  # sizes
        "icon_grid_0002_R19B07_mch.nc",  # file_name
        "https://polybox.ethz.ch/index.php/s/tFQian4aDzTES6c/download",  # uri
    )

    MCH_OPR_R04B07_DOMAIN01 = (
        "Grid used in the icon-ch2_small experiment (generated by IconTools (DWD) (used by MeteoSwiss for verification of icon-ch2 setup) )",  # description
        GridKind.REGIONAL,  # kind
        GridSizesDict(cell=10700, vertex=5510, edge=16209),  # sizes
        "mch_opr_r4b7_DOM01.nc",  # file_name
        "https://polybox.ethz.ch/index.php/s/ZL7LeEDijGCSJGz/download",  # uri
    )

    MCH_OPR_R19B08_DOMAIN01 = (
        "Grid used in some older MCH experiment, suitable for running single GPU benchmarks",  # description
        GridKind.REGIONAL,  # kind
        GridSizesDict(cell=44528, vertex=22569, edge=67096),  # sizes
        "domain1_DOM01.nc",  # file_name
        "https://polybox.ethz.ch/index.php/s/P6XfWcYjnrsNmeX/download",  # uri
    )

    MCH_CH_R04B09_DSL = (
        "grid used in the mch_ch_r04b09_dsl experiment used for verification of ICON-exclaim DSL port, generated by IconTools (DWD)",  # description
        GridKind.REGIONAL,  # kind
        GridSizesDict(cell=20896, vertex=10663, edge=31558),  # sizes
        "grid.nc",  # file_name
        "https://polybox.ethz.ch/index.php/s/hD232znfEPBh4Oh/download",  # uri
    )

    TORUS_100X116_1000M = (
        "Torus grid with a domain (100x116) vertices and a resolution (edge length) of 1000m, generated by MPI-M GridGenerator ",  # description
        GridKind.TORUS,  # kind
        GridSizesDict(cell=23200, vertex=11600, edge=34800),  # sizes
        " Torus_Triangles_100x116_1000m.nc",  # file_name
        "https://polybox.ethz.ch/index.php/s/yqvotFss9i1OKzs/download",  # uri
    )

    TORUS_50000x5000 = (
        "Torus grid with a resolution (edge_length) of 757m, generated by MPI-M GridGenerator",  # description
        GridKind.TORUS,  # kind
        GridSizesDict(cell=1056, vertex=52, edge=1584),  # sizes
        "Torus_Triangles_50000m_x_5000m_res500m.nc",  # file_name
        "https://polybox.ethz.ch/index.php/s/eclzK00TM9nnLtE/download",  # uri
    )


class ExperimentDefinition(NamedTuple):
    code: str
    description: str
    grid: Grid
    num_levels: int
    partitioned_data: Mapping[int, str] | None = None


class Experiment(ExperimentDefinition, enum.Enum):
    EXCLAIM_APE = (
        "exclaim_ape_R02B04",  # code
        "EXCLAIM Aquaplanet experiment",  # description
        Grid.R02B04_GLOBAL,  # grid
        60,  # num_levels
        {  # partitioned_data
            1: "https://polybox.ethz.ch/index.php/s/2n2WpTgZFlTCTHu/download"
        },
    )

    MCH_CH_R04B09 = (
        "mch_ch_r04b09_dsl",  # code
        "Regional setup used by EXCLAIM to validate the icon-exclaim.",  # description
        Grid.MCH_CH_R04B09_DSL,  # grid
        65,  # num_levels
        {  # partitioned_data
            1: "https://polybox.ethz.ch/index.php/s/f42nsmvgOoWZPzi/download",
            2: "https://polybox.ethz.ch/index.php/s/P6F6ZbzWHI881dZ/download",
            4: "https://polybox.ethz.ch/index.php/s/NfES3j9no15A0aX/download",
        },
    )

    JW = (
        "jabw_R02B04",  # code
        "Jablonowski Williamson atmospheric test case",  # description
        Grid.R02B04_GLOBAL,  # grid
        35,  # num_levels
        {  # partitioned_data
            1: "https://polybox.ethz.ch/index.php/s/5W3Z2K6pyo0egzo/download"
        },
    )

    GAUSS3D = (
        "gauss3d_torus",  # code
        "Gauss 3d test case",  # description
        Grid.TORUS_50000x5000,  # grid
        35,  # num_levels
        {  # partitioned_data
            1: "https://polybox.ethz.ch/index.php/s/ZuqDIREPVits9r0/download"
        },
    )

    WEISMAN_KLEMP_TORUS = (
        "weisman_klemp_torus",  # code
        "Weisman-Klemp experiment on Torus Grid",  # description
        Grid.TORUS_50000x5000,  # grid
        64,  # num_levels
        {  # partitioned_data
            1: "https://polybox.ethz.ch/index.php/s/ByLnyii7MMRHJbK/download"
        },
    )
