name: ICON4Py Unit Tests
on:
    workflow_dispatch:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
        types: [opened, reopened, synchronize]
jobs:
    test-model:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.10", "3.11"]
                backend: ["embedded", "gtfn_cpu"] # TODO add dace-cpu
                component: ["diffusion", "dycore", "microphysics", "driver"] #TODO add common (needs gridfiles) TODO add advection
                #grid: ["simple_grid"] #, "icon_grid", "icon_grid_global"] #TODO  provide the grid files for icon_grid and icon_grid_global
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install system dependencies
              run: |
                sudo apt-get update
                sudo apt-get install libboost-all-dev

            - name: install uv
              uses: astral-sh/setup-uv@v5
              with:
                  version: "0.6.16"
                  enable-cache: true
                  cache-dependency-glob: "uv.lock"
                  python-version: ${{ matrix.python-version }}
            - name: cache key
              id: cache-key
              run: |
                 echo "key=$(python ./.github/validation_grids.py --option=cache-key") >> $GITHUB_OUTPUT

            - name: gridfile cache
              id: grid-cache
              uses: actions/cache@v4
              with:
                  path: testdata/grids
                  key: ${{ steps.cache-key.outputs.key }}

            - name: download grids
              if: steps.grid-cache.outputs.cache-hit != 'true'
              run: |
                python ./.github/validation_grids.py --option=download


            - name: run nox session - unit tests
              shell: bash
              env:
                NUM_PROCESSES: auto
              run: |
                uv run nox -s "test_model-${{matrix.python-version}}(basic, ${{ matrix.component }})" -- --backend=${{ matrix.backend }}

            - name: run nox session - stencil tests
              shell: bash
              env:
                  NUM_PROCESSES: auto
              run: |
                uv run nox -s "test_model-${{matrix.python-version}}(stencils, ${{ matrix.component }})" -- --backend=${{ matrix.backend }} --grid=simple_grid
