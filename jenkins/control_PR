def repo_identifier = "Project"
def icon_fork = "C2SM"
def icon_branch = "icon-dsl"
def icon_default = true

def spack_fork = "C2SM"
def spack_branch = "main"
def spack_default = true

def gt4py_fork = "GridTools"
def gt4py_branch = "icon4py_20230621"
def gt4py_default = true
String[] triggerPhrase = env.ghprbCommentBody.split(" ")

def parseTriggerPhrase(it) {
    fork = it.split("=")[1].split("/")[0]
    branch = it.split("=")[1].split("/")[1]
    return [fork, branch]
}
triggerPhrase.each {
    if(it.contains("icon${repo_identifier}")) {
        (icon_fork, icon_branch) = parseTriggerPhrase(it)
        icon_default = false
    }
}
triggerPhrase.each {
    if(it.contains("spack${repo_identifier}")) {
        (spack_fork, spack_branch) = parseTriggerPhrase(it)
        spack_default = false
    }
}
triggerPhrase.each {
    if(it.contains("gt4py${repo_identifier}")) {
        (gt4py_fork, gt4py_branch) = parseTriggerPhrase(it)
        gt4py_default = false
    }
}
pipeline {
    agent none
    stages {
        stage('Launch builders') {
                parallel {
                    stage('run PR') {
                        steps {
                        build job: 'icon4py-custom-PR', propagete: true, 
                        parameters: [
                            string(name: 'JENKINSFILE_PATH', value: "${WORKSPACE}/jenkins/custom_PR")
                            string(name: 'upstream_root', value: "${WORKSPACE}")
                            ]
                        }
                    }
                }
        }    
    }
}
