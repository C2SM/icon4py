def repo_identifier = "Project"
def spack_fork = "C2SM"
def spack_branch = "main"
String[] triggerPhrase = env.ghprbCommentBody.split(" ")

def parseTriggerPhrase(it) {
    fork = it.split("=")[1].split("/")[0]
    branch = it.split("=")[1].split("/")[1]
    return [fork, branch]
}
triggerPhrase.each {
    if(it.contains("spack${repo_identifier}")) {
        (spack_fork, spack_branch) = parseTriggerPhrase(it)
    }
}

def map_srun = [
    daint: 'srun -t 03:00:00 -C gpu -A g110 -c 12 -n 1'
    ]

pipeline {
    agent none
    options{
        timeout(time: 3, unit: 'HOURS')
    }
    stages {
        stage('Tests') {
            matrix {
                agent { 
                  node {
                      label "${NODENAME}" 
                      customWorkspace "jenkins/workspace/EXCLAIM/icon4py/icon4py-spack-PR_${BUILD_NUMBER}"
                    }
                }
                axes {
                    axis {
                        name 'NODENAME'
                        values 'daint'
                    }
                }
                post {
                    always {
                        archiveArtifacts artifacts: 'local_copy/spack*.txt', allowEmptyArchive: true
                        echo 'Cleaning up workspace'
                        deleteDir()
                    }
                }
                stages {
                    stage('Clone Repos') {
                        steps {
                            sh """
                            git clone --depth 1 --recurse-submodules --shallow-submodules -b '${spack_branch}' https://github.com/${spack_fork}/spack-c2sm.git
                            git clone . local_copy
                            """
                        }
                    }
                    stage('Install with gt4py@stable') {
                        steps {
                            script{
                                def srun = map_srun["${NODENAME}"]
                                sh """
                                . ./spack-c2sm/setup-env.sh
                                cd local_copy
                                spack env activate spack/gt4py-stable
                                ${srun} spack install -v --test=root
                                """
                            }
                        }
                    }
                }
            }
        }
    }
}
