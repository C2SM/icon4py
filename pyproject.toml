[project]
name = "icon4py"
version = "0.0.6"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "icon4py-common>=0.0.6",
    "icon4py-driver>=0.0.6",
    "icon4py-atmosphere-advection>=0.0.6",
    "icon4py-atmosphere-diffusion>=0.0.6",
    "icon4py-atmosphere-dycore>=0.0.6",
    "icon4py-atmosphere-subgrid_scale_physics-microphysics>=0.0.6"
]

[project.optional-dependencies]
all = ["icon4py[dace,distributed,integration,io]"]
dace = ["icon4py-common[dace]>=0.0.6", "dace<1.0"]  # Dace should be removed after updatding gt4py
distributed = ["icon4py-common[distributed]>=0.0.6"]
integration = ["icon4pytools>=0.0.6"]
io = ["icon4py-common[io]>=0.0.6"]

[dependency-groups]
build = [
    "bump-my-version>=0.16.0",
    "pip>=22.1.1",
    "setuptools>=70.1.1",
    "wheel>=0.45.0",
    "wget>=3.2",
]
docs = [
    "myst-parser>=4.0.0",
    "sphinx==7.3.7",
    "sphinx-math-dollar>=1.2.1",
    "sphinx-rtd-theme>=3.0.1",
    "sphinx-toolbox>=3.8.1",
    "TexSoup>=0.3.1",
]
lint = ["pre-commit>=4.0.1", "ruff>=0.8.0", "tach>=0.16.0"]
test = [
    "coverage[toml]>=7.5.0",
    "nox @ git+https://github.com/wntrblm/nox.git",  # TODO: remove once next version is released
    "pytest-benchmark>=5.0.0",
    "pytest>=8.0.1",
    "pytest-cache>=1.0",
    "pytest-cov>=5.0.0",
    "pytest-factoryboy>=2.6.1",
    "pytest-xdist[psutil]>=3.5.0",
    "pytest-mpi>=0.6",
    "tox>=3.25",
]
typing = [
    "mypy[faster-cache]>=1.13.0",
    "typing-extensions>=4.11.0",
    "types-cffi>=1.16.0",
]
dev = [
    { include-group = "build" },
    { include-group = "docs" },
    { include-group = "lint" },
    { include-group = "test" },
    { include-group = "typing" },
]

# -- packages & workspace --
[tool.uv]
environments = ["sys_platform == 'darwin'", "sys_platform == 'linux'"]

[tool.uv.sources]
ghex = { git = "https://github.com/ghex-org/GHEX.git", branch = "master", subdirectory = "bindings/python" }
# use GT4Py tagged release until #596 & gt4py#1738 are merged
gt4py = { git = "https://github.com/GridTools/gt4py", tag = "icon4py_20241113" }
icon4py-common = { workspace = true }
icon4py-driver = { workspace = true }
icon4py-atmosphere-advection = { workspace = true }
icon4py-atmosphere-diffusion = { workspace = true }
icon4py-atmosphere-dycore = { workspace = true }
icon4py-atmosphere-subgrid_scale_physics-microphysics = { workspace = true }
icon4pytools = { workspace = true }
serialbox = { git = "https://github.com/GridTools/serialbox", subdirectory = "src/serialbox-python" }

[tool.uv.workspace]
members = [
    "model/atmosphere/advection",
    "model/atmosphere/diffusion",
    "model/atmosphere/dycore",
    "model/atmosphere/subgrid_scale_physics/microphysics",
    "model/common",
    "model/driver",
    "tools",
]


# -- mypy --
[tool.mypy]
mypy_path = "model/common/src:tools/src"
explicit_package_bases = true
namespace_packages = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
# exclude = [
#   '^tests/f2ser/*.py',
#   '^tests/icon4pygen/*.py',
#   '^tests/liskov/*.py',
#   '^tests/py2f/*.py',
# ]
ignore_missing_imports = true
implicit_reexport = true
install_types = true
non_interactive = true
show_column_numbers = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

# -- pytest --
[tool.pytest]

[tool.pytest.ini_options]
norecursedirs = "*_external_src"
markers = [
    "slow_tests: mark test as slow",
    "datatest: test depending on serialized data generated by a full model run",
    "with_netcdf: test depending on a compatible version of netCDF4",
]
addopts = ["-p", "icon4py.model.common.test_utils.pytest_config"]

# -- ruff --
[tool.ruff]
extend-exclude = [
    '.eggs',
    '.gt_cache',
    '.ipynb_checkpoints',
    '.tox',
    '_local_',
    'build',
    'dist',
    'docs',
    '_external_src',
    'tests/_disabled',
    'setup.py',
]
indent-width = 4
line-length = 100
respect-gitignore = true
show-fixes = true
target-version = "py310"

[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = false

[tool.ruff.lint]
extend-select = ['E', 'F', 'I', 'B', 'A', 'T10', 'ERA', 'NPY', 'RUF']
# # Rules sets:
# E: pycodestyle
# F: Pyflakes
# I: isort
# B: flake8-bugbear
# A: flake8-builtins
# T10: flake8-debugger
# ERA: eradicate
# NPY: NumPy-specific rules
# RUF: Ruff-specific rules
ignore = [
    'E501',   # Line too long (using Bugbear's B950 warning)
    'RUF009', # Do not perform function call in dataclass defaults
    'B010',   # Do not call `setattr` with a constant attribute value.
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ['icon4py']
known-third-party = ['gt4py', 'packaging', 'setuptools']
lines-after-imports = 2

[tool.ruff.lint.mccabe]
max-complexity = 15
